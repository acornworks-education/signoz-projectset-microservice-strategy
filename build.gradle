plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'jacoco'	
}

group = 'com.acornworks'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.ta4j:ta4j-core:0.15'
	implementation 'org.ta4j:ta4j-examples:0.15'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// [Start] SigNoz Spring Boot JVM Metrics
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	// [End] SigNoz Spring Boot JVM Metrics
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestCoverageVerification // verification is always performed after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacocoTestCoverageVerification {
	dependsOn jacocoTestReport	// report is generated before check a verification

	violationRules {
		rule {
			limit {
				minimum = 0.90
			}
		}
	}
}

task checkOtel {
	def libUrl = "https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar";
	def otelFile = new File("lib/opentelemetry-javaagent.jar");

	if (otelFile.exists()) {
		println("The OpenTelemetry library file exists ...");
	} else {
		mkdir("lib");
		ant.get(src: libUrl, dest: otelFile);
	}
}

build.finalizedBy(checkOtel)